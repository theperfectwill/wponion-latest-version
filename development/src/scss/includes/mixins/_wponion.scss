@keyframes spin {
	100% {
		transform: rotate(360deg);
	}
}

@mixin loader() {
	&::before {
		height:          1em;
		width:           1em;
		display:         block;
		position:        absolute;
		top:             50%;
		left:            50%;
		margin-left:     -0.5em;
		margin-top:      -0.5em;
		content:         '';
		animation:       spin 1s ease-in-out infinite;
		background:      url('../img/loader.svg') center center;
		background-size: cover;
		line-height:     1;
		text-align:      center;
		font-size:       2em;
		color:           rgba(#000, 0.75);
	}
}

@mixin wponion_field_border_fix() {
	border-bottom: $element_border;
	border-top:    none;
	border-right:  $element_border;

	&:last-child {
		border-bottom: none;
	}
}

@mixin wponion_field_horizontal() {
	> .wpo-row {
		> .wponion-field-title {
			flex:          0 0 100% !important;
			max-width:     100% !important;
			width:         100% !important;
			margin-bottom: $element_gurtter;
			margin-right:  0;
		}

		> .wponion-fieldset {
			flex:      0 0 100% !important;
			max-width: 100% !important;
			width:     100% !important;
			float:     none;
		}
	}
}

@mixin wponion_ui_sortable_placeholder() {
	border:           1px dashed #f1c40f;
	background-color: #fffae4;
}

@mixin wponion_respond_to($break_points...) {
	$points: null;
	@each $breakpoint in $break_points {
		@if map-has-key($wpo_breakpoints, $breakpoint) {
			@if ($points) {
				$points: $points + ', #{inspect(map-get($wpo_breakpoints, $breakpoint))}'
			} @else {
				$points: inspect(map-get($wpo_breakpoints, $breakpoint))
			}
		} @else {
			@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`.Available breakpoints are: #{map-keys($breakpoints)}.";
		}
	}
	@media #{$points}{
		@content
	}
}
